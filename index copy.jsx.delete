import React, { useState } from 'react';
import styles from "./index.module.css";

// DashBoard.jsx

import DashBoard from './components/DashBoard'
import DashBoardSettings from './components/DashBoard/Settings'

import Scaleway from './components/Scaleway'
import LangChain from './components/LangChain'
import OpenAI from './components/OpenAi'





const Settings = ({ }) => {
  const [isOpen, setIsOpen] = useState({
    dashboard: false,
    scaleway: false,
    langchain: false,
    openai: false
  });
  
  const [dashboardId, setDashboardId] = useState(null)
  

  return (
    <div >
       <div>
        <b>
          Dashboard Control de acceso
        </b>
        {isOpen.dashboard && (
          <div>
            <p className="paragraph-bar">
              LangChain permite dar la estructura correcta a nuestros tipos de archivo van a
              ser una conexion directa como el middlware semantico, por así decirlo l = 0 no se
              renderizara, si es mayoar a 0 podremos usar esas cadenas como middleware en el LLM.
            </p>
            {!dashboardId ? (
              <DashBoard 
                setDashboardId={setDashboardId}/>
            ):(
              <DashBoardSettings 
                setDashboardId={setDashboardId}/>
            )}
          </div>
        )}
      </div>
      <div>
        <b className="title-bar">
          Lancedb: Almacenamiento en cache
        </b>
        {isOpen.scaleway && (
          <div>
            <p className="paragraph-bar">
              Scaleway para subir los archivos en disco, un archivo en disco contiene
              un nombre del cliente y una posicion del array. El objetivo es aumentar la
              escalabilidad obteniendo espacio en disco en la nube y conectandolo a más MVP's
            </p>
            <Scaleway />
          </div>
        )}
      </div>

     
      <div>
        <b>
          Langchain: Modelado de datos
        </b>
        {isOpen.langchain && (
          <div>
            <LangChain />
            <p className="paragraph-bar">
              LangChain permite dar la estructura correcta a nuestros tipos de archivo van a
              ser una conexion directa como el middlware semantico, por así decirlo l = 0 no se
              renderizara, si es mayoar a 0 podremos usar esas cadenas como middleware en el LLM.
            </p>
          </div>
        )}
      </div>

      <div>
        <b>
          Apis Instantaneas
        </b>
        {isOpen.openai && (
          <div>
            <p className="paragraph-bar">
              Antes del LLM, vamos a cargar nuestro marketplace de recursos definiendo agentes inteligentes
              que encapuseln tu aplicacion en una capa semantica formada por las cuartas partes
              El LLm por defecto va a ser el OpenAI
            </p>
            <OpenAI />
          </div>
        )}
      </div>
    </div>
  );
};

export default Settings;