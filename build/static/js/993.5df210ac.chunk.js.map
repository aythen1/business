{"version":3,"file":"static/js/993.5df210ac.chunk.js","mappings":"6MAUA,MAkDA,EAlDsBA,IAKf,IALgB,oBACrBC,EAAmB,mBACnBC,EAAkB,WAClBC,EAAU,UACVC,GACDJ,EACC,MAAMK,GAAWC,EAAAA,EAAAA,OACX,WAAEC,IAAeC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAC9CC,EAA8B,KAAfJ,EACfK,GAAeC,EAAAA,EAAAA,QAAO,MAkB5B,OAVAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAsBC,IACtBJ,EAAaK,UAAYL,EAAaK,QAAQC,SAASF,EAAMG,SAC/DlB,GAAoB,EAAM,EAG9B,OADAmB,SAASC,iBAAiB,YAAaN,GAChC,KACLK,SAASE,oBAAoB,YAAaP,EAAmB,CAC9D,GACA,KAEDQ,EAAAA,EAAAA,MAAA,OAAKC,IAAKZ,EAAca,UAAWC,EAAAA,EAAOC,uBAAuBC,SAAA,EAC/DL,EAAAA,EAAAA,MAAA,OACEE,UAAWd,EAAee,EAAAA,EAAOG,OAASH,EAAAA,EAAOI,eACjDC,QAASpB,GArBSqB,MACtB,MAAM,gBAAEC,EAAe,iBAAEC,EAAgB,KAAEC,GAAS5B,EAC9C6B,EAAiBhC,EAAY8B,EACnC7B,GAASgC,EAAAA,EAAAA,IAAS,CAAEC,UAAWL,EAAiBG,iBAAgBD,UAChE9B,GAASkC,EAAAA,EAAAA,IAAe,KACxBtC,GAAoB,EAAM,GAgBmB2B,SAAA,CAC1C,SAECY,EAAAA,EAAAA,KAACC,EAAAA,IAAiB,CAACC,KAAM,GAAIC,MAAM,aAErCpB,EAAAA,EAAAA,MAAA,OACEQ,QAASA,KACP7B,EAAmBE,GACnBH,GAAoB,EAAM,EAE5BwB,UAAWC,EAAAA,EAAOG,OAAOD,SAAA,CAC1B,iBAECY,EAAAA,EAAAA,KAACI,EAAAA,IAAc,CAACF,KAAM,GAAIC,MAAM,iBAE9B,C,kCCvDV,SAAgB,uBAAyB,+BAA+B,OAAS,eAAe,eAAiB,uB","sources":["views/app/pages/Drive/components/FolderOptions.jsx","webpack://group1171276705/./src/views/app/pages/Drive/components/FolderOptions.module.css?e900"],"sourcesContent":["'use client'\r\nimport { useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport styles from './FolderOptions.module.css'\r\nimport { IoTrashOutline, IoSettingsOutline } from 'react-icons/io5'\r\nimport {\r\n  copyFile,\r\n  obtainFileData\r\n} from '@/actions/assets'\r\n\r\nconst FolderOptions = ({\r\n  setShowFolderOption,\r\n  handleDeleteFolder,\r\n  folderName,\r\n  directory\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const { fileToCopy } = useSelector((state) => state.assets)\r\n  const isCopyActive = fileToCopy !== ''\r\n  const componentRef = useRef(null)\r\n  const handlePasteFile = () => {\r\n    const { directoryCopied, folderNameCopied, file } = fileToCopy\r\n    const destinationKey = directory + folderNameCopied\r\n    dispatch(copyFile({ sourceKey: directoryCopied, destinationKey, file }))\r\n    dispatch(obtainFileData(''))\r\n    setShowFolderOption(false)\r\n  }\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (componentRef.current && !componentRef.current.contains(event.target))\r\n        setShowFolderOption(false)\r\n    }\r\n    document.addEventListener('mousedown', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [])\r\n  return (\r\n    <div ref={componentRef} className={styles.folderOptionsContainer}>\r\n      <div\r\n        className={isCopyActive ? styles.option : styles.optionDisabled}\r\n        onClick={isCopyActive && handlePasteFile}\r\n      >\r\n        Paste\r\n        <IoSettingsOutline size={17} color=\"#00f\" />\r\n      </div>\r\n      <div\r\n        onClick={() => {\r\n          handleDeleteFolder(directory)\r\n          setShowFolderOption(false)\r\n        }}\r\n        className={styles.option}\r\n      >\r\n        Delete Folder\r\n        <IoTrashOutline size={17} color=\"#D0342C\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FolderOptions\r\n","// extracted by mini-css-extract-plugin\nexport default {\"folderOptionsContainer\":\"folderOptionsContainer_iyZlG\",\"option\":\"option_UIZPG\",\"optionDisabled\":\"optionDisabled_FHbsx\"};"],"names":["_ref","setShowFolderOption","handleDeleteFolder","folderName","directory","dispatch","useDispatch","fileToCopy","useSelector","state","assets","isCopyActive","componentRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","ref","className","styles","folderOptionsContainer","children","option","optionDisabled","onClick","handlePasteFile","directoryCopied","folderNameCopied","file","destinationKey","copyFile","sourceKey","obtainFileData","_jsx","IoSettingsOutline","size","color","IoTrashOutline"],"sourceRoot":""}