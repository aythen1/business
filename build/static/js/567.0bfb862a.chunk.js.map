{"version":3,"file":"static/js/567.0bfb862a.chunk.js","mappings":"kKACA,QAAwC,8BAAxC,EAAqF,qBAArF,EAAuH,mBAAvH,EAAqJ,iBAArJ,EAAoL,oBAApL,EAAoN,kBAApN,EAAqP,qBAArP,EAAmR,eAAnR,EAAwS,YAAxS,EAA4T,cAA5T,EAAqV,iB,aCK9U,MAAMA,EAAeC,IAAsB,IAArB,KAAEC,EAAI,MAAEC,GAAOF,EAC1C,MAAOG,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,IAC9BG,EAAYC,IAAiBJ,EAAAA,EAAAA,WAAS,GAEvCK,EAAWT,EAAKU,QAItBC,QAAQC,IAAI,OAAQH,IAClBI,EAAAA,EAAAA,YAAUC,UACNd,EAAKe,MAEJZ,EAAea,KAAKC,MAAMjB,EAAKe,MACnC,GACE,IAkDL,OACEG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAA6BF,UAE3CG,EAAAA,EAAAA,MAAA,OACEF,UAAWC,EAGXF,SAAA,EAEAF,EAAAA,EAAAA,KAAA,OAAAE,UACkB,IAAfb,GACCW,EAAAA,EAAAA,KAAA,OAAKM,QAjBGC,KAChBjB,GAAc,EAAM,EAgBaa,UAAWC,EAAmBF,UACrDF,EAAAA,EAAAA,KAAA,OACEG,UAAWC,EACXI,QAAQ,YACRC,OAAO,KACPC,MAAM,KACNC,oBAAoB,gBACpBC,QAAQ,MACRC,EAAE,MACFC,EAAE,MACFC,iBAAiB,gBAAeb,UAEhCF,EAAAA,EAAAA,KAAA,QACEgB,KAAK,eACLC,EAAE,gOAKRjB,EAAAA,EAAAA,KAAA,OAAKM,QA9EKV,UAElB,GAAKT,EAMDG,GAAc,GAIhBG,QAAQC,IAAI,SAAUP,OAVX,CACT,MAAM+B,EAAU,CAAC,EAEjBzB,QAAQC,IAAI,KAAMwB,GAClB9B,EAAU8B,EACd,CAqBA,EAkDmCf,UAAWC,EAAkBF,UACtDF,EAAAA,EAAAA,KAAA,OACEG,UAAWC,EACXI,QAAQ,YACRC,OAAO,KACPC,MAAM,KACNC,oBAAoB,gBACpBC,QAAQ,MACRC,EAAE,MACFC,EAAE,MACFC,iBAAiB,gBAAeb,UAEhCF,EAAAA,EAAAA,KAAA,QACEgB,KAAK,eACLC,EAAE,gHAMZZ,EAAAA,EAAAA,MAAA,OAAKF,UAAWC,EAAoBF,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAcF,UAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAWF,SACxBlB,EAAYmC,KAAI,CAACC,EAAQC,KACxBrB,EAAAA,EAAAA,KAAA,OAEEG,UAAWC,EACXkB,MAAO,CACLb,OAAO,GAADc,OAAKH,GAAU,EAAC,OAHnBC,UASbrB,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAgBF,SAAC,mBAIpC,C","sources":["webpack://group1171276705/./src/views/app/components/ChatBot/record-viewer.module.css?3065","views/app/components/ChatBot/record-viewer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerRecordViewer\":\"containerRecordViewer_qlrq0\",\"recordViewer\":\"recordViewer_NWJL5\",\"buttonPlay\":\"buttonPlay_YtwUF\",\"iconPlay\":\"iconPlay_cvMZs\",\"buttonPause\":\"buttonPause_Tvm5O\",\"iconPause\":\"iconPause_EdCbZ\",\"containerBox\":\"containerBox_oaHFe\",\"barBox\":\"barBox_gF0rr\",\"bar\":\"bar_Gm6Uu\",\"splot\":\"splot_JTwMy\",\"textTime\":\"textTime_BfZjp\"};","import React, { useState, useEffect } from 'react'\r\n\r\nimport styles from './record-viewer.module.css'\r\n\r\n// import { openRecordVector } from '../handleVector'\r\n\r\nexport const RecordViewer = ({ file, click }) => {\r\n  const [volumeArray, setVolumeArray] = useState([])\r\n  const [record, setRecord] = useState(false)\r\n  const [recordPlay, setRecordPlay] = useState(false)\r\n\r\n  const fileName = file.message\r\n//   const mimeType = fileName.split('.').pop()\r\n//   const name = fileName.split('/').pop()\r\n\r\n  console.log('file', fileName)\r\n    useEffect(async () => {\r\n     if(file.data){\r\n\r\n         setVolumeArray(JSON.parse(file.data))\r\n     }\r\n    }, [])\r\n\r\n  // console.log('n', name)\r\n  const recordStart = async () => {\r\n      \r\n    if (!record) {\r\n        const _record = {}\r\n        // const _record = await openRecordVector(fileName)\r\n        console.log('re', _record)\r\n        setRecord(_record)\r\n    }else{\r\n        setRecordPlay(true)\r\n         // Crear un contexto de audio\r\n    // const audioContext = new (window.AudioContext || window.webkitAudioContext)()\r\n  \r\n      console.log('record', record)\r\n  \r\n      // Supongamos que tienes un array buffer llamado 'audioData'\r\n    //   audioContext.decodeAudioData(\r\n    //     record.buffer,\r\n    //     (buffer) => {\r\n    //       const source = audioContext.createBufferSource()\r\n    //       source.buffer = buffer\r\n    //       source.connect(audioContext.destination)\r\n    //       source.start()\r\n    //       console.log('lisening')\r\n    //     },\r\n    //     (error) => {\r\n    //       console.error('Error al decodificar los datos de audio:', error)\r\n    //     }\r\n    //   )\r\n    }\r\n   \r\n\r\n    // Crear un buffer de audio\r\n    // const source = audioContext.createBufferSource()\r\n    // source.buffer = record.buffer\r\n\r\n    // // Conectar el buffer de audio al destino de salida (altavoces)\r\n    // source.connect(audioContext.destination)\r\n\r\n    // // Reproducir el audio\r\n    // source.start()\r\n  }\r\n\r\n  const recordEnd = () => {\r\n    setRecordPlay(false)\r\n  }\r\n\r\n  // LÃ³gica para renderizar un visor de PDF\r\n  return (\r\n    <>\r\n    <div className={styles.containerRecordViewer}>\r\n\r\n      <div\r\n        className={styles.recordViewer}\r\n        // onClick={() => {\r\n        //   click(fileName)\r\n        // }}\r\n      >\r\n        <div>\r\n          {recordPlay === true ? (\r\n            <div onClick={recordEnd} className={styles.buttonPause}>\r\n              <svg\r\n                className={styles.iconPause}\r\n                viewBox=\"0 0 34 34\"\r\n                height=\"34\"\r\n                width=\"34\"\r\n                preserveAspectRatio=\"xMidYMid meet\"\r\n                version=\"1.1\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                enableBackground=\"new 0 0 34 34\"\r\n              >\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M9.2,25c0,0.5,0.4,1,0.9,1h3.6c0.5,0,0.9-0.4,0.9-1V9c0-0.5-0.4-0.9-0.9-0.9h-3.6 C9.7,8,9.2,8.4,9.2,9V25z M20.2,8c-0.5,0-1,0.4-1,0.9V25c0,0.5,0.4,1,1,1h3.6c0.5,0,1-0.4,1-1V9c0-0.5-0.4-0.9-1-0.9 C23.8,8,20.2,8,20.2,8z\"\r\n                ></path>\r\n              </svg>\r\n            </div>\r\n          ) : (\r\n            <div onClick={recordStart} className={styles.buttonPlay}>\r\n              <svg\r\n                className={styles.iconPlay}\r\n                viewBox=\"0 0 34 34\"\r\n                height=\"34\"\r\n                width=\"34\"\r\n                preserveAspectRatio=\"xMidYMid meet\"\r\n                version=\"1.1\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                enableBackground=\"new 0 0 34 34\"\r\n              >\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M8.5,8.7c0-1.7,1.2-2.4,2.6-1.5l14.4,8.3c1.4,0.8,1.4,2.2,0,3l-14.4,8.3 c-1.4,0.8-2.6,0.2-2.6-1.5V8.7z\"\r\n                ></path>\r\n              </svg>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={styles.containerBox}>\r\n          <div className={styles.barBox}>\r\n            <div className={styles.bar}>\r\n              {volumeArray.map((volume, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={styles.splot}\r\n                  style={{\r\n                    height: `${volume || 1}%` // Asegurar que tenga al menos 1% para ser visible\r\n                  }}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className={styles.textTime}>00:20</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n"],"names":["RecordViewer","_ref","file","click","volumeArray","setVolumeArray","useState","record","setRecord","recordPlay","setRecordPlay","fileName","message","console","log","useEffect","async","data","JSON","parse","_jsx","_Fragment","children","className","styles","_jsxs","onClick","recordEnd","viewBox","height","width","preserveAspectRatio","version","x","y","enableBackground","fill","d","_record","map","volume","index","style","concat"],"sourceRoot":""}