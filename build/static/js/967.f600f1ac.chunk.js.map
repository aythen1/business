{"version":3,"file":"static/js/967.f600f1ac.chunk.js","mappings":"4JACA,QAAwB,cAAxB,EAAkD,kBAAlD,EAA0E,YAA1E,EAA4F,YAA5F,EAAgH,cAAhH,EAAqI,aAArI,EAAyJ,aAAzJ,EAAiL,iBAAjL,EAAyM,aAAzM,EAA6N,a,aCI7N,MA4GA,EA5GaA,IAAU,MAANA,EACf,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,KA+B/BC,EAAAA,EAAAA,YAAU,KAJRF,EAvBa,CAAC,CACZG,MAAO,iBACPC,MAAO,WACPC,KAAM,WACNC,KAAM,OACN,CACAH,MAAO,iBACPC,MAAO,WACPC,KAAM,WACNC,KAAM,OACN,CACAH,MAAO,iBACPC,MAAO,WACPC,KAAM,WACNC,KAAM,OACN,CACAH,MAAO,iBACPC,MAAO,WACPC,KAAM,WACNC,KAAM,QASG,GACV,IAIH,MAMMC,EAAYC,IAAiBP,EAAAA,EAAAA,UAAS,IAQ5C,OACEQ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaH,SAAC,+BAI9BD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAiBH,SAAA,EAC/BD,EAAAA,EAAAA,MAAA,OAEEG,UAAWC,EAAWH,SAAA,EAEtBC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWH,SAAC,OAG5BD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAYH,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaH,UAC7BC,EAAAA,EAAAA,KAAA,SACEG,KAAK,OACLC,MAAOR,EACPS,SAxBaC,IAExBT,EAAcS,EAAMC,OAAOH,MAAM,OAyBxBJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBH,SAAC,cAQpCX,EAAIoB,KAAK,CAACC,EAAIC,KACbZ,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAWH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaH,SAC1BU,EAAGjB,OAAS,eAEfM,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAYH,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYH,SACzBU,EAAGhB,OAAS,eAEfO,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBH,SAAC,SAGjCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYH,SAC3BU,EAAGf,MAAQ,WAEZM,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYH,SAC3BU,EAAGd,MAAQ,qBAMhB,C","sources":["webpack://group1171276705/./src/views/app/components/MenuRightData/Data.module.css?7fd0","views/app/components/MenuRightData/Data.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_MadOD\",\"container\":\"container_zE77q\",\"box\":\"box_Kl2Jv\",\"new\":\"new_jqMbo\",\"image\":\"image_Pvknu\",\"grid\":\"grid_dOzGI\",\"name\":\"name_I5E4n\",\"settings\":\"settings_wtP7_\",\"date\":\"date_az65s\",\"size\":\"size__j_6j\"};","import React, { useState, useEffect } from 'react';\r\n\r\n// import LanceDB from \"../../Agent/LanceDB\";\r\nimport styles from \"./Data.module.css\";\r\n\r\nconst Data = ({ }) => {\r\n  const [dbs, setDbs] = useState([])\r\n\r\n  // Simulated data (replace this with your actual data fetching logic)\r\n  const fetchData = () => {\r\n    const _dbs = [{\r\n      image: 'image puppeter',\r\n      title: 'New Data',\r\n      date: '17/10/23',\r\n      size: '0KB'\r\n    },{\r\n      image: 'image puppeter',\r\n      title: 'New Data',\r\n      date: '17/10/23',\r\n      size: '0KB'\r\n    },{\r\n      image: 'image puppeter',\r\n      title: 'New Data',\r\n      date: '17/10/23',\r\n      size: '0KB'\r\n    },{\r\n      image: 'image puppeter',\r\n      title: 'New Data',\r\n      date: '17/10/23',\r\n      size: '0KB'\r\n    }];\r\n\r\n    // Set the data to the state\r\n    setDbs(_dbs);\r\n  };\r\n\r\n  // useEffect to fetch data when the component mounts\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []); // Empty dependency array ensures the effect runs only once\r\n\r\n\r\n\r\n  const handleAddLanceDB = () => {\r\n    \r\n    return []\r\n  }\r\n\r\n // State to hold the input value\r\n const [changeData, setChangeData] = useState('');\r\n\r\n // Event handler for input change\r\n const handleChangeData = (event) => {\r\n   // Update the state with the new input value\r\n   setChangeData(event.target.value);\r\n };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.title}>\r\n        Importa aqu√≠ tus datos\r\n      </div>\r\n\r\n      <div className={styles.container}>\r\n        <div \r\n          // onClick={() => handleAddLanceDB()}\r\n          className={styles.box}\r\n        >\r\n          <div className={styles.new}>\r\n            +\r\n          </div>\r\n          <div className={styles.grid}>\r\n            <div className={styles.title}>\r\n            <input \r\n              type=\"text\"\r\n              value={changeData}\r\n              onChange={handleChangeData}\r\n            />\r\n            </div>\r\n            <div className={styles.settings}>\r\n              ...\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n  \r\n        {dbs.map( (db, index) => (\r\n          <div className={styles.box}>\r\n            <div className={styles.image}>\r\n              {db.image || 'Not found'}\r\n            </div>\r\n            <div className={styles.grid}>\r\n              <div className={styles.name}>\r\n                {db.title || 'Not title'}\r\n              </div>\r\n              <div className={styles.settings}>\r\n                ...\r\n              </div>\r\n              <div className={styles.date}>\r\n              {db.date || '- - -'}\r\n              </div>\r\n              <div className={styles.size}>\r\n              {db.size || '0KB'}  \r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Data;"],"names":["_ref","dbs","setDbs","useState","useEffect","image","title","date","size","changeData","setChangeData","_jsxs","children","_jsx","className","styles","type","value","onChange","event","target","map","db","index"],"sourceRoot":""}